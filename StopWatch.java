/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stopwatch;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * simple stopwatch using java form
 * @author Michael
 */
public class StopWatch extends javax.swing.JFrame implements Runnable {

    //data fields
    boolean isRunning;
    Thread timer;
    int hrs, mnts, sec, mlisec, numprints;    
    String clock, miniClock, outPrints; 
    
    /**Constructor
     * Creates new form StopWatch
     */
  
    public StopWatch()
    {
        initComponents();
        timer =  new Thread(this);
        reset();
    }
    
    /**
     * resets the stopwatch
     */
    private void reset()
    {
        numprints = 1;
        lapseBtn.setVisible(false);
        outPrints = "";
        hrs = 0;
        mnts = 0;
        sec = 0;
        mlisec = 0;
        clock = "00:00:00";
        miniClock = "00";
        showDisplay();
        this.jTextPane1.setText("");
        this.setSize(300, 200);
        this.jScrollPane1.setVisible(false);
        this.jTextPane1.setVisible(false);
    }
    
    /**
     * update stopwatch
     */
    private void updateClock(){
        if( mlisec > 999 )
        {
            sec ++;
            mlisec = 0;
        }
        if( sec > 59 )
        {
            mnts ++;
            sec = 0;
        }
        if( mnts > 59 )
        {
            hrs ++;
            mnts = 0;
        }    
        if( hrs > 23 )
        {
            reset();
        }   
    }
    
    /**
     * setup the output clock
     */
    private void setClock()
    {
       
       miniClock = "";
       if( (mlisec/10) < 10 )
       {
           miniClock += "0" + (mlisec/10);
       }
       else
       {
           miniClock = ""+ (mlisec/10);
       }
       clock = "";
       if( hrs > 9 )
       {        
           clock +=  hrs + ":";
       }
       else
       {
           clock += "0" + hrs + ":";
       }
       
       if( mnts > 9 )
       {
           clock += mnts + ":";
       }
       else
       {
           clock += "0" + mnts + ":";
       }
       if( sec > 9 )
       {
           clock += sec;    
       }
       else
       {
           clock += "0" + sec;
       }
       
    }
    
    @Override
    public void run()
    {
        
        try {
            
            while (true)
            {
             mlisec++;
             updateClock();
             setClock();
             showDisplay();
             Thread.sleep(1);
            }
            
        } catch(Exception e){}
       
    }
    
    private void showDisplay(){
       
        this.mainClock.setText(clock);
        this.mlisSecClock.setText(miniClock);
    }
    
    private void printOut(){
        outPrints += numprints + ")\t" + this.mainClock.getText()
                + "  " +this.mlisSecClock.getText() + "\n" ;
        this.jTextPane1.setText(outPrints);
        numprints++;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainClock = new javax.swing.JLabel();
        mlisSecClock = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        lapseBtn = new javax.swing.JButton();
        startBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("StopWatch");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        mainClock.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        mainClock.setText("00:00:00");
        mainClock.setToolTipText("");

        mlisSecClock.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mlisSecClock.setText("00");

        jTextPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane1.setViewportView(jTextPane1);

        lapseBtn.setText("Lapse");
        lapseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lapseBtnActionPerformed(evt);
            }
        });

        startBtn.setText("Start");
        startBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startBtnMousePressed(evt);
            }
        });

        resetBtn.setText("Reset");
        resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                resetBtnMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(mainClock, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mlisSecClock)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lapseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(mlisSecClock))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainClock, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(resetBtn)
                        .addComponent(startBtn))
                    .addComponent(lapseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lapseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lapseBtnActionPerformed
     
        this.setSize(320, 420);
        this.jScrollPane1.setVisible(true);
        this.jTextPane1.setVisible(true);
        printOut();
      
    }//GEN-LAST:event_lapseBtnActionPerformed

    private void startBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startBtnMousePressed
        if( startBtn.getText().equals("Stop") )
        {    
            timer.suspend();
            this.startBtn.setText("Start");
        }
        else
        {           
            if( isRunning ){
                timer.resume();
            }
            else{
                timer.start();             
            }
            this.startBtn.setText("Stop");
        }
         isRunning = true;
        if( outPrints.equals("") ) this.lapseBtn.setVisible(true);
            
        
    }//GEN-LAST:event_startBtnMousePressed
    /**
     * 
     * @param evt 
     */
    private void resetBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMousePressed
        reset();
        timer.suspend();
        this.startBtn.setText("Start");
    }//GEN-LAST:event_resetBtnMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StopWatch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton lapseBtn;
    private javax.swing.JLabel mainClock;
    private javax.swing.JLabel mlisSecClock;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton startBtn;
    // End of variables declaration//GEN-END:variables
}
